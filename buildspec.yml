version: 0.2


phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - sudo apt install openjdk-11-jdk -y
      - java -version
      - wget https://dlcdn.apache.org/maven/maven-3/3.8.6/binaries/apache-maven-3.8.6-bin.tar.gz
      - tar -xvf apache-maven-3.8.6-bin.tar.gz
      - mvn --version
     # - aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 514887167484.dkr.ecr.ap-south-1.amazonaws.com
      - REPOSITORY_URI=514887167484.dkr.ecr.ap-south-1.amazonaws.com/buildpipeline
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
     #- IMAGE_TAG=latest
  build:
    commands:
      - mvn clean package
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker login -u rawikumarp -p $password
      - docker build -t buildpipeline .
      - docker tag buildpipeline:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
     # - echo Writing image definitions file...
     # - printf '[{"name":"node-container","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
     # - cat imagedefinitions.json 
#artifacts:
    #files: imagedefinitions.json
